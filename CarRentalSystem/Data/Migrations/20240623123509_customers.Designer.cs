// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240623123509_customers")]
    partial class customers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Models.Cars", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CarId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("CarId");

                    b.ToTable("cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            Brand = "BMW",
                            IsAvailable = true,
                            Model = "3Series",
                            Price = 3000.0
                        },
                        new
                        {
                            CarId = 2,
                            Brand = "BMW",
                            IsAvailable = true,
                            Model = "5Series",
                            Price = 5000.0
                        },
                        new
                        {
                            CarId = 3,
                            Brand = "BMW",
                            IsAvailable = true,
                            Model = "6Series",
                            Price = 6000.0
                        },
                        new
                        {
                            CarId = 4,
                            Brand = "BMW",
                            IsAvailable = true,
                            Model = "GLS",
                            Price = 8000.0
                        },
                        new
                        {
                            CarId = 5,
                            Brand = "Mercedes",
                            IsAvailable = true,
                            Model = "AMG",
                            Price = 7000.0
                        },
                        new
                        {
                            CarId = 6,
                            Brand = "Mercedes",
                            IsAvailable = true,
                            Model = "SClass",
                            Price = 9000.0
                        });
                });

            modelBuilder.Entity("Models.Customer", b =>
                {
                    b.Property<int>("customerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("customerId"));

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("customerId");

                    b.ToTable("customers");
                });
#pragma warning restore 612, 618
        }
    }
}
